(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{79:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return u})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),c=(r(0),r(99)),o={id:"example-reducer",title:"Example Reducer"},i={unversionedId:"example-reducer",id:"example-reducer",isDocsHomePage:!1,title:"Example Reducer",description:"<div",source:"@site/docs/example-reducer.mdx",slug:"/example-reducer",permalink:"/immer/example-reducer",editUrl:"https://github.com/immerjs/immer/edit/master/website/docs/example-reducer.mdx",version:"current",sidebar:"Immer",previous:{title:"Curried producers",permalink:"/immer/curried-produce"},next:{title:"React setState example",permalink:"/immer/example-setstate"}},u=[],s={toc:u};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("center",null,Object(c.b)("div",{"data-ea-publisher":"immerjs","data-ea-type":"image",className:"horizontal bordered"})),Object(c.b)("details",null,Object(c.b)("summary",{className:"egghead-summary"},"egghead.io lesson 13: Using Immer in a (React) reducer"),Object(c.b)("br",null),Object(c.b)("div",null,Object(c.b)("iframe",{width:"760",height:"427",scrolling:"no",src:"https://egghead.io/lessons/react-update-immutable-state-with-react-usereducer-through-immer/embed"})),Object(c.b)("a",{className:"egghead-link",href:"https://egghead.io/lessons/react-update-immutable-state-with-react-usereducer-through-immer"},"Hosted on egghead.io")),Object(c.b)("p",null,"Here is a simple example of the difference that Immer could make in practice."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},"// Reducer with initial state\nconst INITIAL_STATE = {}\n// Shortened, based on: https://github.com/reactjs/redux/blob/master/examples/shopping-cart/src/reducers/products.js\nconst byId = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case RECEIVE_PRODUCTS:\n            return {\n                ...state,\n                ...action.products.reduce((obj, product) => {\n                    obj[product.id] = product\n                    return obj\n                }, {})\n            }\n        default:\n            return state\n    }\n}\n")),Object(c.b)("p",null,"After using Immer, our reducer can be expressed as:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-javascript"},'import produce from "immer"\n\n// Reducer with initial state\nconst INITIAL_STATE = {}\n\nconst byId = produce((draft, action) => {\n    switch (action.type) {\n        case RECEIVE_PRODUCTS:\n            action.products.forEach(product => {\n                draft[product.id] = product\n            })\n    }\n}, INITIAL_STATE)\n')),Object(c.b)("p",null,"Notice that it is not necessary to handle the default case, a producer that doesn't do anything will return the original state."),Object(c.b)("p",null,"Creating Redux reducer is just a sample application of the Immer package. Immer is not just designed to simplify Redux reducers. It can be used in any context where you have an immutable data tree that you want to clone and modify (with structural sharing)."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Note: it might be tempting after using producers for a while, to just place ",Object(c.b)("inlineCode",{parentName:"em"},"produce")," in your root reducer and then pass the draft to each reducer and work directly over said draft. Don't do that. It removes the benefit of using Redux as a system where each reducer is testable as a pure function. Immer is best used when applied to small, individual pieces of logic.")))}d.isMDXComponent=!0},99:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=d(r),m=n,b=l["".concat(o,".").concat(m)]||l[m]||p[m]||c;return r?a.a.createElement(b,i(i({ref:t},s),{},{components:r})):a.a.createElement(b,i({ref:t},s))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,o=new Array(c);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<c;s++)o[s]=r[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);